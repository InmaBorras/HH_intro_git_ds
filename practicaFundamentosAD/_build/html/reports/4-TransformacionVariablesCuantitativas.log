Traceback (most recent call last):
<<<<<<< HEAD
=======
<<<<<<< HEAD
  File "/home/inma/anaconda3/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 1087, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/inma/anaconda3/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 540, in async_execute
    await self.async_execute_cell(
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 832, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/inma/anaconda3/lib/python3.8/site-packages/nbclient/client.py", line 740, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd 
import numpy as np
import math
from scipy import stats
pd.options.mode.chained_assignment = None  # default='warn'
from plotnine import ggplot, aes, geom_line, geom_point, geom_bar, geom_boxplot
dataframe = pd.read_csv('/home/ruben/Fundamentos-de-Analisis-de-DAtos-I/Practica/Melbourne_housing_FULL.csv')
import scipy.stats as ss
import matplotlib.pyplot as plot
import seaborn as sb
from seaborn import kdeplot
def quartile_skew(x):
  q = x.quantile([.25, .50, .75]) 
  return ((q[0.75] - q[0.5]) - (q[0.5] - q[0.25])) / (q[0.75] - q[0.25])


def mostrar_analisis_var_cuantitativas(data):
    #calcular coeficiente de variacion
 datos_variable=pd.DataFrame([{"coeficiente de Variacion":(data.std()/data.mean())*100,\
                 "rango de la variable":data.max() - data.min(),
                 "rango intercuartilico":data.quantile(0.75) - data.quantile(0.25),
                 "coeficiente de asimetria":quartile_skew(data)}])
 return(datos_variable)

def mostrar_graf_variables_continuas(df_data,column):
    sb.set_theme(style="whitegrid")
    fig, (ax1,ax2) = plot.subplots(1,2,figsize=(12,6))
    sb.histplot(data=df_data,x=column,ax=ax1)
    sb.boxplot(data=df_data,x=column,ax=ax2)
    sb.displot(data=df_data, x=column,kind="kde",rug=True)
    return plot.show()
def mostrar_graf_variables_discretas(df_data,column):
    sb.set_theme(style="whitegrid")
    fig, (ax1,ax2) = plot.subplots(1,2,figsize=(12,6))
    sb.boxplot(data=df_data,x=column,ax=ax1)
    sb.countplot(data=df_data,x=column,ax=ax2)
    plot.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-1-2f25d3b4ae28>[0m in [0;36m<module>[0;34m[0m
[1;32m      5[0m [0mpd[0m[0;34m.[0m[0moptions[0m[0;34m.[0m[0mmode[0m[0;34m.[0m[0mchained_assignment[0m [0;34m=[0m [0;32mNone[0m  [0;31m# default='warn'[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0;32mfrom[0m [0mplotnine[0m [0;32mimport[0m [0mggplot[0m[0;34m,[0m [0maes[0m[0;34m,[0m [0mgeom_line[0m[0;34m,[0m [0mgeom_point[0m[0;34m,[0m [0mgeom_bar[0m[0;34m,[0m [0mgeom_boxplot[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 7[0;31m [0mdataframe[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mread_csv[0m[0;34m([0m[0;34m'/home/ruben/Fundamentos-de-Analisis-de-DAtos-I/Practica/Melbourne_housing_FULL.csv'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      8[0m [0;32mimport[0m [0mscipy[0m[0;34m.[0m[0mstats[0m [0;32mas[0m [0mss[0m[0;34m[0m[0;34m[0m[0m
[1;32m      9[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mpyplot[0m [0;32mas[0m [0mplot[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py[0m in [0;36mread_csv[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)[0m
[1;32m    686[0m     )
[1;32m    687[0m [0;34m[0m[0m
[0;32m--> 688[0;31m     [0;32mreturn[0m [0m_read[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m,[0m [0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    689[0m [0;34m[0m[0m
[1;32m    690[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py[0m in [0;36m_read[0;34m(filepath_or_buffer, kwds)[0m
[1;32m    452[0m [0;34m[0m[0m
[1;32m    453[0m     [0;31m# Create the parser.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 454[0;31m     [0mparser[0m [0;34m=[0m [0mTextFileReader[0m[0;34m([0m[0mfp_or_buf[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    455[0m [0;34m[0m[0m
[1;32m    456[0m     [0;32mif[0m [0mchunksize[0m [0;32mor[0m [0miterator[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py[0m in [0;36m__init__[0;34m(self, f, engine, **kwds)[0m
[1;32m    946[0m             [0mself[0m[0;34m.[0m[0moptions[0m[0;34m[[0m[0;34m"has_index_names"[0m[0;34m][0m [0;34m=[0m [0mkwds[0m[0;34m[[0m[0;34m"has_index_names"[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m    947[0m [0;34m[0m[0m
[0;32m--> 948[0;31m         [0mself[0m[0;34m.[0m[0m_make_engine[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mengine[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    949[0m [0;34m[0m[0m
[1;32m    950[0m     [0;32mdef[0m [0mclose[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py[0m in [0;36m_make_engine[0;34m(self, engine)[0m
[1;32m   1178[0m     [0;32mdef[0m [0m_make_engine[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mengine[0m[0;34m=[0m[0;34m"c"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1179[0m         [0;32mif[0m [0mengine[0m [0;34m==[0m [0;34m"c"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1180[0;31m             [0mself[0m[0;34m.[0m[0m_engine[0m [0;34m=[0m [0mCParserWrapper[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mf[0m[0;34m,[0m [0;34m**[0m[0mself[0m[0;34m.[0m[0moptions[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1181[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1182[0m             [0;32mif[0m [0mengine[0m [0;34m==[0m [0;34m"python"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.8/site-packages/pandas/io/parsers.py[0m in [0;36m__init__[0;34m(self, src, **kwds)[0m
[1;32m   2008[0m         [0mkwds[0m[0;34m[[0m[0;34m"usecols"[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0musecols[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2009[0m [0;34m[0m[0m
[0;32m-> 2010[0;31m         [0mself[0m[0;34m.[0m[0m_reader[0m [0;34m=[0m [0mparsers[0m[0;34m.[0m[0mTextReader[0m[0;34m([0m[0msrc[0m[0;34m,[0m [0;34m**[0m[0mkwds[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2011[0m         [0mself[0m[0;34m.[0m[0munnamed_cols[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_reader[0m[0;34m.[0m[0munnamed_cols[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2012[0m [0;34m[0m[0m

[0;32mpandas/_libs/parsers.pyx[0m in [0;36mpandas._libs.parsers.TextReader.__cinit__[0;34m()[0m

[0;32mpandas/_libs/parsers.pyx[0m in [0;36mpandas._libs.parsers.TextReader._setup_parser_source[0;34m()[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/home/ruben/Fundamentos-de-Analisis-de-DAtos-I/Practica/Melbourne_housing_FULL.csv'
FileNotFoundError: [Errno 2] No such file or directory: '/home/ruben/Fundamentos-de-Analisis-de-DAtos-I/Practica/Melbourne_housing_FULL.csv'
=======
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 604, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 85, in ensure_async
    result = await obj
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/jupyter_client/asynchronous/channels.py", line 48, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
>>>>>>> 420f4f2779880757030b36ab383148b510e556ab
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/ruben/anaconda3/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 536, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
<<<<<<< HEAD
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
arr=[]
for lat, lon in zip(data_filtered['Lattitude'], data_filtered['Longtitude']):
    arr.append(distance((lat,lon), coords_2).km)

data_filtered["Distancia_NEW"]=arr



dataframe.describe()
#df_fil=dataframe[(dataframe["Lattitude"] is not None) & (dataframe["Longtitude"] is not None)]
dataframe["Location_TRA"]=dataframe.Longtitude/dataframe.Lattitude
dataframe_less=dataframe[(dataframe["Lattitude"]>=dataframe["Lattitude"].mean()) ]
dataframe_over=dataframe[(dataframe["Lattitude"]<dataframe["Lattitude"].mean()) ]

sb.regplot(data=data_filtered, x="Distancia_NEW", y="Price")
plot.show()
#mostrar_graf_variables_continuas(dataframe,"Location_TRA")
sb.scatterplot(data=dataframe, x="Location_TRA", y="Price")
mostrar_graf_variables_continuas(dataframe,"Longtitude")
plot.show()

dataframe_min=dataframe[dataframe["Lattitude"]>=dataframe["Lattitude"].mean()]
#dataframe["Lattitude_TRA"]=np.log(dataframe["Lattitude"])
#dataframe["Price_TRA"]=np.log(dataframe["Price"])
#mostrar_graf_variables_continuas(dataframe,"Location_TRA")
sb.scatterplot(data=dataframe, x="Lattitude", y="Price_TRA")
mostrar_graf_variables_continuas(dataframe,"Lattitude_TRA")
plot.show()

sb.scatterplot(data=dataframe, x="Lattitude_TRA", y="Price_TRA")
#mostrar_graf_variables_continuas(dataframe_filtered,"Distance_SQR")
plot.show()

data_filtered.corr()

#sb.swarmplot(data=dataframe, x="Lattitude", y="Longtitude",hue="Price",s = 4)
#mostrar_graf_variables_continuas(dataframe_filtered,"Distance_SQR")
#plot.show()x_estimator=np.mean

#sb.lmplot(x="Location_TRA", y="Price", data=dataframe, x_estimator=np.mean);
#plot.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-37-5596a4c4f5ea>[0m in [0;36m<module>[0;34m[0m
[1;32m     25[0m [0;31m#mostrar_graf_variables_continuas(dataframe,"Location_TRA")[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     26[0m [0msb[0m[0;34m.[0m[0mscatterplot[0m[0;34m([0m[0mdata[0m[0;34m=[0m[0mdataframe[0m[0;34m,[0m [0mx[0m[0;34m=[0m[0;34m"Lattitude"[0m[0;34m,[0m [0my[0m[0;34m=[0m[0;34m"Price_TRA"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 27[0;31m [0mmostrar_graf_variables_continuas[0m[0;34m([0m[0mdataframe[0m[0;34m,[0m[0;34m"Lattitude_TRA"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     28[0m [0mplot[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     29[0m [0;34m[0m[0m

[0;32m<ipython-input-1-5d2674297076>[0m in [0;36mmostrar_graf_variables_continuas[0;34m(df_data, column)[0m
[1;32m     30[0m     [0msb[0m[0;34m.[0m[0mset_theme[0m[0;34m([0m[0mstyle[0m[0;34m=[0m[0;34m"whitegrid"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     31[0m     [0mfig[0m[0;34m,[0m [0;34m([0m[0max1[0m[0;34m,[0m[0max2[0m[0;34m)[0m [0;34m=[0m [0mplot[0m[0;34m.[0m[0msubplots[0m[0;34m([0m[0;36m1[0m[0;34m,[0m[0;36m2[0m[0;34m,[0m[0mfigsize[0m[0;34m=[0m[0;34m([0m[0;36m12[0m[0;34m,[0m[0;36m6[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 32[0;31m     [0msb[0m[0;34m.[0m[0mhistplot[0m[0;34m([0m[0mdata[0m[0;34m=[0m[0mdf_data[0m[0;34m,[0m[0mx[0m[0;34m=[0m[0mcolumn[0m[0;34m,[0m[0max[0m[0;34m=[0m[0max1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     33[0m     [0msb[0m[0;34m.[0m[0mboxplot[0m[0;34m([0m[0mdata[0m[0;34m=[0m[0mdf_data[0m[0;34m,[0m[0mx[0m[0;34m=[0m[0mcolumn[0m[0;34m,[0m[0max[0m[0;34m=[0m[0max2[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     34[0m     [0msb[0m[0;34m.[0m[0mdisplot[0m[0;34m([0m[0mdata[0m[0;34m=[0m[0mdf_data[0m[0;34m,[0m [0mx[0m[0;34m=[0m[0mcolumn[0m[0;34m,[0m[0mkind[0m[0;34m=[0m[0;34m"kde"[0m[0;34m,[0m[0mrug[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/seaborn/distributions.py[0m in [0;36mhistplot[0;34m(data, x, y, hue, weights, stat, bins, binwidth, binrange, discrete, cumulative, common_bins, common_norm, multiple, element, fill, shrink, kde, kde_kws, line_kws, thresh, pthresh, pmax, cbar, cbar_ax, cbar_kws, palette, hue_order, hue_norm, color, log_scale, legend, ax, **kwargs)[0m
[1;32m   1390[0m     p = _DistributionPlotter(
[1;32m   1391[0m         [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1392[0;31m         [0mvariables[0m[0;34m=[0m[0m_DistributionPlotter[0m[0;34m.[0m[0mget_semantics[0m[0;34m([0m[0mlocals[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1393[0m     )
[1;32m   1394[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/seaborn/distributions.py[0m in [0;36m__init__[0;34m(self, data, variables)[0m
[1;32m    106[0m     ):
[1;32m    107[0m [0;34m[0m[0m
[0;32m--> 108[0;31m         [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0mdata[0m[0;34m=[0m[0mdata[0m[0;34m,[0m [0mvariables[0m[0;34m=[0m[0mvariables[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    109[0m [0;34m[0m[0m
[1;32m    110[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/seaborn/_core.py[0m in [0;36m__init__[0;34m(self, data, variables)[0m
[1;32m    602[0m     [0;32mdef[0m [0m__init__[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mvariables[0m[0;34m=[0m[0;34m{[0m[0;34m}[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    603[0m [0;34m[0m[0m
[0;32m--> 604[0;31m         [0mself[0m[0;34m.[0m[0massign_variables[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mvariables[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    605[0m [0;34m[0m[0m
[1;32m    606[0m         [0;32mfor[0m [0mvar[0m[0;34m,[0m [0mcls[0m [0;32min[0m [0mself[0m[0;34m.[0m[0m_semantic_mappings[0m[0;34m.[0m[0mitems[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/seaborn/_core.py[0m in [0;36massign_variables[0;34m(self, data, variables)[0m
[1;32m    666[0m             [0mself[0m[0;34m.[0m[0minput_format[0m [0;34m=[0m [0;34m"long"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    667[0m             plot_data, variables = self._assign_variables_longform(
[0;32m--> 668[0;31m                 [0mdata[0m[0;34m,[0m [0;34m**[0m[0mvariables[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    669[0m             )
[1;32m    670[0m [0;34m[0m[0m

[0;32m~/anaconda3/lib/python3.7/site-packages/seaborn/_core.py[0m in [0;36m_assign_variables_longform[0;34m(self, data, **kwargs)[0m
[1;32m    885[0m                     [0;31m# We don't know what this name means[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    886[0m                     [0merr[0m [0;34m=[0m [0;34mf"Could not interpret value `{val}` for parameter `{key}`"[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 887[0;31m                     [0;32mraise[0m [0mValueError[0m[0;34m([0m[0merr[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    888[0m [0;34m[0m[0m
[1;32m    889[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Could not interpret value `Lattitude_TRA` for parameter `x`
ValueError: Could not interpret value `Lattitude_TRA` for parameter `x`
=======
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 811, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 628, in _async_poll_for_reply
    await self._async_handle_timeout(timeout, cell)
  File "/home/ruben/anaconda3/lib/python3.7/site-packages/nbclient/client.py", line 679, in _async_handle_timeout
    "Cell execution timed out", timeout, cell
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 30 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
mostrar_graf_variables_continuas(dataframe,"Landsize")
-------------------
>>>>>>> 000807e021c0d23a9c82143670d32e6db87c56bc
>>>>>>> 420f4f2779880757030b36ab383148b510e556ab

